variables:
  FLUX_BOOTSTRAP_PROJECT_OWNER:
    value: $CI_PROJECT_NAMESPACE
    description: the project owner of $CI_PROJECT_NAME hold flux config
    expand: true
  FLUX_BOOTSTRAP_PROJECT:
    value: $CI_PROJECT_NAME
    description: the project name which will hold flux config
    expand: true
  FLUX_BOOTSTRAP_BRANCH:
    description: the project branch where flux configs gets bootstrapped
    value: $CI_DEFAULT_BRANCH
    expand: true
  FLUX_MANIFESTS_PATH:
    value: clusters/dev
    description: the project repo path where flux manifests will be created and sync
  GAR_READER_SA:
    value: gar-reader@$GCP_PROJECT.iam.gserviceaccount.com
    description: the google service account with permissions to download artifacts from GAR
    expand: true

stages:
  - gitops

# Bootstrap Flux
# this needs to be done only once and ensure the $CI_COMMIT_AUTHOR is not your token
bootstrap-flux:
  stage: gitops
  only:
    - triggers
  image:
    name: registry.gitlab.com/kameshsampath/kube-dev-tools
    entrypoint: [""]
  variables:
    GITLAB_TOKEN: $FLUX_PROJECT_ACCESS_TOKEN
  before_script:
    - kubectl config get-contexts
    - kubectx $FLUX_BOOTSTRAP_PROJECT_OWNER/$FLUX_BOOTSTRAP_PROJECT:gke-agent
    - kubectl get pods
  script: |
    flux bootstrap gitlab \
    --owner=$FLUX_BOOTSTRAP_PROJECT_OWNER \
    --repository=$FLUX_BOOTSTRAP_PROJECT \
    --branch=$FLUX_BOOTSTRAP_BRANCH \
    --path=$FLUX_MANIFESTS_PATH \
    --token-auth \
    --personal
